(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     90604,       1807]
NotebookOptionsPosition[     88816,       1773]
NotebookOutlinePosition[     89179,       1789]
CellTagsIndexPosition[     89136,       1786]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookEvaluate", "[", 
   RowBox[{"NotebookOpen", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<file-ops.nb\>\""}], 
     "]"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7798003156733027`*^9, 3.779800315897184*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"8ac639c4-1abc-430d-97a3-f6042c9dff31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"**", " ", "PREDICTIONS"}], " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "predRfMonFPRTheor", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"predRfMonFPRTheor", "[", 
      RowBox[{"detFNR_", ",", " ", "dInProp_", ",", " ", 
       RowBox[{"pDetNCH0_:", "0"}]}], 
      RowBox[{"(*", " ", 
       RowBox[{"for", " ", "this", " ", "context"}], " ", "*)"}], "]"}], " ", 
     ":=", " ", 
     RowBox[{"1", " ", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", " ", "-", " ", "detFNR", " ", "+", " ", "pDetNCH0"}], 
        ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"dInProp", "+", "1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7798010727971487`*^9, 3.779801081433345*^9}, {
   3.779801181540124*^9, 3.779801267130604*^9}, {3.779802510757163*^9, 
   3.779802551554657*^9}, {3.779802590326226*^9, 3.779802686495701*^9}, {
   3.779802752589963*^9, 3.7798027556279163`*^9}, {3.77980359931071*^9, 
   3.779803601700038*^9}, {3.780506944465993*^9, 3.780506986692979*^9}, 
   3.780507017003893*^9, {3.780509155212612*^9, 3.780509198324973*^9}, {
   3.780509802419544*^9, 3.780509833114542*^9}, 3.780509884529645*^9, {
   3.7805108584870243`*^9, 3.780510861933689*^9}, {3.780512723377943*^9, 
   3.780512726876638*^9}, 
   3.780578771737176*^9},ExpressionUUID->"6ae06671-140c-4cd7-b5a2-\
b7f731c52c5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"**", " ", "ANALYSIS"}], " ", "***)"}], " "}]], "Input",
 CellChangeTimes->{{3.779804175138115*^9, 3.779804179014846*^9}, {
  3.779806460285565*^9, 
  3.779806461197919*^9}},ExpressionUUID->"92a51566-7288-402e-add8-\
0f7d4137a06f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "getRfFPRPointEstsWithMonH0ct", ",", " ", 
     "getRfFNRPointEstResidualsWithH0ct", ",", " ", 
     "getRfFprMSQPairsWithBins"}], "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"provides", " ", "a", " ", "list", " ", "of", " ", 
    RowBox[{"triples", ":", " ", 
     RowBox[{"(", 
      RowBox[{"monH0InfoCt", ",", " ", 
       RowBox[{"our", " ", "RF", " ", "mon", " ", "FPR", " ", "est"}], ",", 
       " ", 
       RowBox[{"data", " ", "RF", " ", "mon", " ", "FPR", " ", "est"}]}], 
      ")"}]}]}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getRfFPRPointEstsWithMonH0ct", "[", 
     RowBox[{
     "seshNums_", ",", " ", "sampleCtPerSubset_", ",", " ", "winSize_"}], " ",
      "]"}], ":=", " ", 
    RowBox[{"tallyInfoInTriplesets", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"predRfMonFPRTheor", "[", 
            RowBox[{
             RowBox[{"predFNRfromData", "[", 
              RowBox[{"#", ",", " ", "detFilenames"}], "]"}], ",", " ", 
             "winSize"}], "]"}], ",", " ", 
           RowBox[{"predFPRfromData", "[", 
            RowBox[{"#", ",", " ", "monFilenames", ",", " ", "winSize", ",", 
             RowBox[{"(*", 
              RowBox[{"mon", " ", "num"}], "*)"}], "11"}], "]"}]}], "}"}], 
         "&"}], "/@", " ", 
        RowBox[{"sampleAcrossAllSubsets", "[", 
         RowBox[{"seshNums", ",", " ", "sampleCtPerSubset"}], "]"}]}], ")"}], 
      ",", " ", "\"\<h0count\>\"", ",", "monFilenames", ",", " ", "winSize", 
      ",", " ", "11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"KINDA", " ", 
    RowBox[{"USELESS", ":", " ", 
     RowBox[{"provides", " ", "a", " ", "list", " ", "of", " ", 
      RowBox[{"triples", ":", " ", 
       RowBox[{"(", 
        RowBox[{"monH1InfoCt", ",", " ", 
         RowBox[{"our", " ", "mon", " ", "FNR", " ", "est"}], ",", " ", 
         RowBox[{"data", " ", "mon", " ", "FNR", " ", "est"}]}], 
        ")"}]}]}]}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"getFNRPointEstsWithDetH1ct", "[", 
      RowBox[{
      "seshNums_", ",", " ", "sampleCtPerSubset_", ",", " ", "winSize_"}], 
      " ", "]"}], ":=", " ", 
     RowBox[{"tallyInfoInTriplesets", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"predMonFNRTheor", "[", 
             RowBox[{
              RowBox[{"predFPRfromData", "[", 
               RowBox[{"#", ",", " ", "detFilenames"}], "]"}], ",", " ", 
              "winSize"}], "]"}], ",", " ", 
            RowBox[{"predFNRfromData", "[", 
             RowBox[{"#", ",", " ", "monFilenames", ",", " ", "winSize"}], 
             "]"}]}], "}"}], "&"}], "/@", " ", 
         RowBox[{"sampleAcrossAllSubsets", "[", 
          RowBox[{"seshNums", ",", " ", "sampleCtPerSubset"}], "]"}]}], ")"}],
        ",", " ", "\"\<h1count\>\"", ",", "detFilenames", ",", " ", 
       "winSize"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "provides", " ", "a", " ", "list", " ", "of", " ", "absolute", " ", 
    "residuals", " ", "for", " ", 
    RowBox[{"above", ":", " ", 
     RowBox[{"(", 
      RowBox[{"h1InfoCt", ",", " ", 
       RowBox[{
       "abs", " ", "residual", " ", "for", " ", "our", " ", "mon", " ", "FNR",
         " ", "est"}], ",", " ", 
       RowBox[{
       "abs", " ", "residual", " ", "for", " ", "data", " ", "mon", " ", 
        "FNR", " ", "est"}]}], ")"}]}]}], " ", "*)"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getRfFNRPointEstResidualsWithH0ct", "[", 
     RowBox[{
     "seshNums_", ",", " ", "sampleCtPerSubset_", ",", " ", "winSize_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gtValue", "=", 
        RowBox[{"predRfMonFPRTheor", "[", 
         RowBox[{"0.1", ",", " ", "winSize"}], "]"}]}], "}"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", "gtValue"}], "]"}], ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "-", "gtValue"}], "]"}]}], "  ",
           "}"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"getRfFPRPointEstsWithMonH0ct", "[", 
         RowBox[{
         "seshNums", ",", " ", "sampleCtPerSubset", ",", " ", "winSize"}], 
         "]"}]}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"privides", " ", "a", " ", "list", " ", "of", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bin", " ", "start"}], ",", " ", 
       RowBox[{"bin", " ", "elem", " ", "count"}], ",", " ", 
       RowBox[{
       "mean", " ", "squared", " ", "error", " ", "for", " ", "our", " ", 
        "appr"}], ",", " ", 
       RowBox[{
       "mean", " ", "squared", " ", "error", " ", "for", " ", "data", " ", 
        "appr"}]}], ")"}]}], " ", ";", " ", 
    RowBox[{
    "bin", " ", "end", " ", "determined", " ", "by", " ", "bin", " ", 
     "size"}]}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getRfFprMSQPairsWithBins", "[", 
    RowBox[{
    "seshNums_", ",", " ", "sampleCtPerSubset_", ",", " ", "winSize_", ",", 
     " ", "binSize_"}], "]"}], ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h1CtTwoEstList", "=", " ", 
       RowBox[{"(*", 
        RowBox[{"a", " ", "list", " ", "of", " ", "triples", " ", 
         RowBox[{"(", 
          RowBox[{"h0ct", ",", " ", 
           RowBox[{"our", " ", "fpr", " ", "est"}], ",", " ", 
           RowBox[{"data", " ", "fpr", " ", "est"}]}], " "}]}], "*)"}], " ", 
       RowBox[{"getRfFNRPointEstResidualsWithH0ct", "[", 
        RowBox[{
        "seshNums", ",", " ", "sampleCtPerSubset", ",", " ", "winSize"}], 
        "]"}]}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "convert", " ", "h1cts", " ", "into", " ", "bin", " ", "starts"}], " ", 
      "*)"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "  ", 
            RowBox[{"Max", "@", 
             RowBox[{"h1CtTwoEstList", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", " ", 
            "binSize"}], "]"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "@", "#"}], ",", " ", 
              RowBox[{"Mean", "@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], "^", "2"}], 
                ")"}]}], ",", " ", 
              RowBox[{"Mean", "@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "3"}], "]"}], "]"}], "^", "2"}], 
                ")"}]}]}], "}"}], " ", "&"}], "/@", " ", 
           RowBox[{"binListsBy", "[", 
            RowBox[{"h1CtTwoEstList", ",", " ", 
             RowBox[{"{", 
              RowBox[{"First", ",", " ", "0", ",", " ", 
               RowBox[{
                RowBox[{"Max", "@", 
                 RowBox[{"h1CtTwoEstList", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "+", "binSize", 
                "-", "1"}], ",", " ", "binSize"}], "}"}]}], "]"}]}], ")"}]}], 
        "}"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.779804195120331*^9, 3.7798042715529757`*^9}, {
   3.779804920654323*^9, 3.7798049586327267`*^9}, {3.7798057773363943`*^9, 
   3.779805804264683*^9}, {3.779805976617428*^9, 3.779805976907958*^9}, {
   3.77981642261559*^9, 3.779816433878624*^9}, {3.7804923446498213`*^9, 
   3.78049234776628*^9}, {3.7804924451572323`*^9, 3.780492470952149*^9}, {
   3.7804930776053953`*^9, 3.7804930865567837`*^9}, {3.780493121399744*^9, 
   3.780493141248475*^9}, {3.780493186673162*^9, 3.780493215170879*^9}, {
   3.780493265086293*^9, 3.780493291211658*^9}, {3.7804938415111923`*^9, 
   3.7804938418182297`*^9}, {3.7805099648875427`*^9, 3.780509989832139*^9}, {
   3.7805100382152777`*^9, 3.780510123429962*^9}, {3.78051015899034*^9, 
   3.780510169414126*^9}, {3.780510302288278*^9, 3.7805103025514917`*^9}, {
   3.780510334172567*^9, 3.7805104007872667`*^9}, {3.780510433235385*^9, 
   3.7805104455270653`*^9}, {3.780511784260997*^9, 3.780511786410736*^9}, 
   3.78058003580564*^9},
 CellLabel->
  "In[534]:=",ExpressionUUID->"6b6a2e17-c6a4-4dee-b943-3811d4e5fef2"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "PLOTS"}], " ", "PRE", " ", "CORRECTION"}], " ", 
   "***)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"exact", " ", "estimates", " ", "plots"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"win", " ", "=", " ", 
    RowBox[{"5", " ", "idk", " ", 
     RowBox[{"what", "'"}], "s", " ", "happening", " ", "here"}]}], " ", 
   "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", "=", 
      RowBox[{"getRfFPRPointEstsWithMonH0ct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", "5", ",", 
        " ", "5"}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
      ",", " ", 
      RowBox[{"chartHorLine", "[", 
       RowBox[{
        RowBox[{"predRfMonFPRTheor", "[", 
         RowBox[{"0.1", ",", " ", "5"}], "]"}], ",", " ", 
        RowBox[{"Max", "@", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.779804869951255*^9, 3.779804871938509*^9}, {
   3.77980499473481*^9, 3.779804996463889*^9}, {3.779805069115546*^9, 
   3.7798050918084583`*^9}, 3.779805810297018*^9, {3.779806473454517*^9, 
   3.779806477574669*^9}, {3.7804912435949078`*^9, 3.780491245428582*^9}, {
   3.7805104114440937`*^9, 3.780510419671711*^9}, {3.78051046113704*^9, 
   3.780510477893608*^9}, {3.780512128548377*^9, 3.7805121469216957`*^9}, {
   3.7805122554314013`*^9, 
   3.780512271546432*^9}},ExpressionUUID->"8c0312c8-6de9-4c68-abc4-\
a2c617646d51"],

Cell[BoxData[
 GraphicsBox[{{{}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJylWHk8FHr3llBJUbSIktQN2XKpKDylpFTXFam4SDdKiFQvKY0WKaXslLSI
aLGUJQljDMZuzJZS2pVKmxJ19Xp/c+bz+/T++/qDz+Oc85znnO/5LjOanjsc
tkhLSUn5DZOS+s/f//sJPoxuJ1dLud2PrMT/cMN/fttcey7G9kdg+FNrip7P
XTF+vA03+zxecSLaxZixHYbp6/23md4XY6UQqIz5uk1g8lCM8/b9yq+0H6O7
b3/26RMQX+Sv8XlRGFA7kOd3nuK3noIosUZz4482Mf4RB6UR1xOOeT8R49PR
qJsw4V15TKcYTz4O7+rG+NBZPDHWS0Rmisw83pJ7YuyYMlTfUo2Dax6LsdE5
yPEi1g9b/YD8Tw/ZVVzHfngqxh2noeIwtfQsl/QmxyLvVtjy0j9Jj3/6f+lP
hEpzHmuRDPFPj8HI+NOlpxYIxbjxHD5Y+bren0v2u7GYnGneYCSi+NRUmOUk
buqYQfXVZEJm2lezeibF30vHxLBYzarn5N+YBCNLjtV9kUiMWelYnJ84M1u2
Q4zbLsA9oDelYyTZF53BzYmsOz/7qB9Kl1BQ9txCYxrxuV7EiyPHEp7okf3w
BTjKrraz9Kb1Y1/At66AnTbxZPc4i0CnvwNXt1M9jRfgNsohvPIl5efkYJ3G
Mmf2O/JnZSC5/LWeh5OEPxvvVDia4etonnADZ4YtGWfwgS/G6zMg4CRq3x5H
9umXscfIK4MbR/2Qy8Gb0dsC6hwp30AGDgfa6eW/JT2nszA+xfWetgmt7510
DOPpZkaKKL77KnQUR6ZfLSB7zRXs0O/7orOF+hFaiEiPDpetJ4hvaS58NRrX
qJSQvpk5iNUUna+Tp/4W3MDa03m3hT+JTzsTn4PlnPrdSL/0NZycsL8/3ZTq
Z+Yg0KI2lxVP8xuRBc2V1k2qx6ke4yy07juwwCyV+v/2CkKWT32bF0fzqFeA
290qqknbyX65CAdjWnveTqB8R4vwuzU7OM2d9By/icS0NM0zOWQvykHupD21
3pdJv2wBTDhZo04spXoFN1Fk09m3czPFz7yOiIcJM49I+lOQC8OESQm3NhDf
1ELkxar4D/9K9cgUYFNcr1ujLO1np1uQ2aHwdJhEn2zRr/svJQ+xHop1+Zup
nto8yKdWXI3fTvmmFiFU3nq1+T+kt60QN/PHmUYmEq4qwYRA70tGP2h9HUrQ
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

        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}], 
       LineBox[{{0., 0.4095099999999998}, {12267., 0.4095099999999998}, {
        24534., 0.4095099999999998}}]}}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{0, Small}]}, {
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}]}, {}}, {
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.3166611059472842},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 24534.}, {0.3166611059472842, 0.5604367313005126}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{
  3.78051227360157*^9},ExpressionUUID->"73a58e14-b8ca-456f-9f0b-765c3deb2246"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"win", " ", "=", " ", "10"}], ",", " ", "ugh"}], "  ", "*)"}], 
  " ", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", "=", 
      RowBox[{"getRfFPRPointEstsWithMonH0ct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", "5", ",", 
        " ", "10"}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
      ",", " ", 
      RowBox[{"chartHorLine", "[", 
       RowBox[{
        RowBox[{"predRfMonFPRTheor", "[", 
         RowBox[{"0.1", ",", " ", "10"}], "]"}], ",", " ", 
        RowBox[{"Max", "@", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.779804704052112*^9, 3.7798047402219973`*^9}, {
   3.7798048017944307`*^9, 3.7798048066384*^9}, {3.779804988254472*^9, 
   3.7798049923388968`*^9}, {3.779805096068771*^9, 3.7798051077936563`*^9}, {
   3.779805157991571*^9, 3.7798051662101297`*^9}, 3.779805811722166*^9, {
   3.780512283205577*^9, 
   3.780512323618547*^9}},ExpressionUUID->"e10bb79e-664d-498d-a2bb-\
99e821b3ebbd"],

Cell[BoxData[
 GraphicsBox[{{{}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJylWGlczGsbnoRDlixpUyJOypGlOEnJVSqV0EqWUpaEEooUabKcOEgqtCgh
W7Rr0Tqt097MNDN1iIqSkKJOp9Dxet+550Of3770u373dV/39dzP+p85Oz1t
9oxiMBgeEgzGf///7y/kKAZzDxh84b9f/T/cGoydEhqj8vo4Imx1CsnLw1YE
rHsjwixvvNowa+crVx7xvXDAuP7MjY4WETb7AynRPq3PGa9FeDYTDhdNpY3K
Ool/HMYbAnp/8yO9m9eRartbYYrcOxFWPwvvgrkHJu4hPq7CQU2/KG8n8VP8
0V/ettBTrUuEewOhUvW4ZVME1WOcx9eEL/4abztEOOQaVs/q/3daBunZhWBx
0T865z0o7haGAQcl15vahFvDscpC66P2ItKrCB1Zb8pNbN420du8jPicUGRc
mTTImvJWhPffxZq2z4zf/Z+L8GAIOgy9Vta/ovpPbuFlb9D9a/9SfkU4lIrN
Y0IPUjw7fKRf9WgMT9ohMLtD/MHriO+dodNxivrlHo7Hb8MOdL0j/OftkeP5
EgekLghwnEj+Sh9CNfWXIqd7ND5mFFSLO5Vbx1P+2DgstDJ3NtYlzIgCM7H/
xqJswnYPwS1w9e5WI3+n46FXmPZbtyfFP93HN+Gn7emFrSIscw/jx15f4mXe
Tvzb0DE1aA1IIn/LEkbyBxNgs2m0yjlZ0u+PQ+jpdxJHbpH/vDjM/PAmMDiB
6jUlIHIw6VxZHemF30OqdswpZXPCx+4i3lFZ09mC8sMfITzEOdLlA8X5j/F0
la50UwzVk0pBZNDRCKMrbSKs+BCpBjJd3RmUX5YKR9awjKEM4dgniDQRrNUw
pPGdTYRJoHxWoy7phTzG+U5vl7PlFJ+YBMUjZ1X4uwmHPIHfhsO3/XLID/MB
NLqz7n/YSvUl01GpYn4jdZhw+X3sq1n/+xR3qs9Iw2K1nsazEdSPeWnwd4zZ
+8af9OJTYD7cFMP4SH4mJiA94kt6xzGqz0uCe9CzutmXiI8UNLWPFlwdorjJ
U/j2PXOeeJviYSl49mLjK4/5pPc1CxVS8y8qDlO8PAlqqR9nHx5P8fwsmLMV
9qSeJr/tOXiwv8lXwoH4nqnwPHc0vDeN4oIUeHxNrmJ8pvFop0D/9ob82Jfk
Z20OenRPzrFg0HlwJBPXg5wU/55HelXZaNHqzf0+gbAgA++3hBqljyP9oFSo
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
wks7
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
QLo4mOn9H/h/43JClQ==
        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}], 
       LineBox[{{0., 0.6513215598999997}, {11910., 0.6513215598999997}, {
        23820., 0.6513215598999997}}]}}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{0, Small}]}, {
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}]}, {}}, {
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5970567997311294},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 23820.}, {0.5970567997311294, 0.7516375150485732}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.78051231827309*^9},
 CellLabel->
  "Out[491]=",ExpressionUUID->"a5842996-a1a2-4f69-86af-868610bdecf2"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.78051228498151*^9, 
  3.780512285004468*^9}},ExpressionUUID->"b20bb528-23e9-4f26-82a9-\
63b58e869f4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"win", " ", "of", " ", "20"}], ",", " ", 
    RowBox[{"very", " ", "confused"}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", "=", 
      RowBox[{"getRfFPRPointEstsWithMonH0ct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", "5", ",", 
        " ", "20"}], "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
      ",", " ", 
      RowBox[{"chartHorLine", "[", 
       RowBox[{
        RowBox[{"predRfMonFPRTheor", "[", 
         RowBox[{"0.1", ",", " ", "20"}], "]"}], ",", " ", 
        RowBox[{"Max", "@", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.779805113769126*^9, 3.7798051255859537`*^9}, {
   3.779805176949298*^9, 3.779805181866837*^9}, 3.779805813054553*^9, {
   3.780512310309853*^9, 3.7805123261890907`*^9}, {3.7805123665537853`*^9, 
   3.7805123703000183`*^9}},ExpressionUUID->"8189d0bc-a7e0-451f-89b6-\
3854079ec1c9"],

Cell[BoxData[
 GraphicsBox[{{{}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
INu/M37GY2xccZfNR1BfHi/kfe/Lf4H/Bx2vV3Q=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1: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
        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}], 
       LineBox[{{0., 0.8784233454094306}, {11202.5, 0.8784233454094306}, {
        22405., 0.8784233454094306}}]}}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{0, Small}]}, {
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}]}, {}}, {
      {RGBColor[0, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       Dashing[{0, Small}]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8406432781061156},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{406.3636363636344, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 22405.}, {0.8406432781061156, 0.9382771514345853}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7798051447577953`*^9, 3.779805201163835*^9, 
  3.7805123477906427`*^9},
 CellLabel->
  "Out[492]=",ExpressionUUID->"04ddbea8-e591-4a52-96b6-176d51b432f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"MSE", " ", "BINNED", " ", "POST", " ", "CORRECTION"}], " ", 
   "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.780491531550112*^9, 3.7804915339726677`*^9}, {
  3.780491581655231*^9, 
  3.780491585752198*^9}},ExpressionUUID->"b2017288-9ad1-4b0a-b9da-\
64c1a06da201"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "this", " ", "one", " ", "makes", " ", "no", " ", "sense", " ", "at", 
      " ", "all"}], ";", " ", 
     RowBox[{"need", " ", "bigger", " ", "bins"}]}], ",", " ", "too"}], " ", 
   "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "data", "]"}], ";", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"getRfFprMSQPairsWithBins", "[", " ", 
       RowBox[{"(*", " ", "sessions", " ", "*)"}], " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{"samples", " ", "per", " ", "subset", " ", "size"}], "*)"}], 
        "40", ",", " ", 
        RowBox[{"(*", 
         RowBox[{"win", " ", "size"}], " ", "*)"}], "10", ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"bin", " ", "width"}], " ", "*)"}], "25"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLogPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
       " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ")"}]}]}]], "Input",\

 CellChangeTimes->{
  3.7805124108701344`*^9, {3.780512601147399*^9, 
   3.780512612012725*^9}},ExpressionUUID->"dcb32ee4-f8a8-412b-a32a-\
5614e55f67fa"],

Cell[BoxData[
 GraphicsBox[{{}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVe3k81e3zvkpalJBCsrQKhVTacymRNiqlslS0KEkqLagOUrQgZcmWJWtk
J7Ic+3ZsZwsprdJDm1RK5ev3O3P++Dz/PK95zT0z11wz99zv+z6aYeO4/dBI
ERGRy6NERP7f/wX/7YHB2m+tX/6MYf5/kWmDUfdHZ7TsFhPILw/B722D/wSp
0QJZ5Chumb452p9GepXjWLH/2r7nZ2cIZDhCNCx7xAhXOYGs7YSkLIl3cSUj
yf8pLNc8GXNBdqxANj2DrvC45IejxlE8Z+RevKjZtlxSIJ88h33PVvUcvSFK
8S/8r39/F3jEGCl+bqf1Km7w/BJ97/yfCQI5/SL+hp3/oucqJZDtGFCtnf40
0WqqQB5wxxP985EXH08mfB5wygxQspMh2dsTt8Y6SYxUIHvTK/iVbZE3r4nw
yHlBeYro3ieHKd5LL/x5fXGPwQppgZx4FYOro7yv/5SlfK7h75tVCl/eEN5l
3hBVXLkxc40M5eeDDtaPI3F3KF6ND4zeaN+59x+t97+OR5ENcWpqUwTy7hvw
mRyh5C1K8VRuYvqgpGbsLfLXfRPaojdnvJlF/J73RaF40vGqIfIHP2z+U/Qt
f4jiifoje4BZdfwI2dv5o8cre+RBv0kCmeWPFWU/X0T/pXy1byPa1HHlmKsU
/+5tXM4oqq/MJf3AbRwSd0OtKektAxAu5WhVqTmN+A6AhqrynCZnijf7Dma/
aS56NXUi8X8HqnoPRn2dQPreOxh497PV3lhYj7vYwfcLy5Cn/LLvomPW2s+m
drReLhAp/cum6tcSX26B0NgT2Ds1lWSDIOimdX/69VKe6hUEq63Sm4rLqf4T
giFqU3e1Q4ryPxmM2t9dt0Onkp4bjIc1jtqWB4T1DEGazvOF9qPIX3gIfiRP
SWzUoPqL3MPVIDGzY0aU38F7+Bu0ZMcNJWG9h/Vr3y7fZ0T+54di1aLgC0x5
kv1DcXtlYabKEPHZH4oLs+Iejj+rIJB3h4H19tBmza2UX2EYTrvIzh+aQ/KV
cCz8euStabuiQO4Oh9GE4yutXEm/OQKzfz8t2Z9D/tMjsPNIiN9bRXGBLBOJ
HnXH5xGD0wXy+Uh4zVZWd/tL+XZEYmdOzU3OJOIf9zHpusSOR+mE/8F9RI6U
EeM3U/1Fo5DjmDcQ20fxdKPg6ySfceY48WMXBe1v0ZlzrUgfGgWRxw65plrk
nxWFMZbhN3fH037+F4VFC5hi6UtpvXY0Si6/k3SOpXg20fhz9sCGt0eoHnej
4Tf30cXjH6l+VdGY0H/1rJOeikAeiIZPns2Fn4ZUH/UYNJrdts9bTHxZxuC1
nHz870GK5xsDb5/PmmvkCQ8zBgyzzCnVtoS3Lwa2P0202nhUr9mx2Hxp3OJu
FtnvisXJaL9TLV+o37xjEXg/e9pHc8LbG4vqc0v/Th5D9koP8Pmoc8DyJWRv
+gCKB9O+6RhRfI8H8OGHx32uJ332A+RZimXaZxCergfY5TWJe6eb1svF4eXi
/TesxlK9NsZhMMgp6cpksneLQ+bAiSXHnUl+FIddaudqvr0gPqTj4Z/08t7+
K6Q3iMcO6+J6iYnE39l4aAe7f9xnQf4T45EwQnTsAWH+7fG4kFBvZhJNeCYk
4ERyju+c51SPNQko696a0NRE608mIG776S+33Wl9TAKe7PSrl1In/rgJkGjZ
EaXsR/yJJSJzh/J9exeyX5YIBbGfh+O+EL5jifiWM99vkg3hC0/E+Ow+hdM2
5L8xEVr/OZ9WFSFZJAlpK/+JqYtR/jpJ2NY87shPaeL3YBIsDy7t+KJN64OS
sH35yAlL1tL59TsJJ304hql8Wj8/GVfb7j6Z0Un70zoZ3wyNPl54Olcg+yeD
qRGilyfEV5aM1N4Fs62eU/z+ZIT4/lowsFhJIM99iDlTPqzreCY8Lx5imXle
ysl5xOf1h9hn9ELs0Tvio/Ah8vc0rjoVRng+PcSU2B1fqxNpf6ukIG9WxthN
huRvewoUKm+xFm6m/K6k4Fe6/o5pGyi/3BTIzY2t7gwn/90pcEiKarUYRd8L
01JhcUwvq8CR+N+cinkLOmYeDqN6paciNH37Kf9W8vc6FeNfL1hcqET4DB+h
ZuaqJc9WCufRI+xM9t30UzjPkh/hzgE/rSV9ZN/xCD/Z+YtPi5AskYZ/GxwW
syWE52EaZtx2mGr+lvI5lYaMqSHW7pnk70EaAlvXLHF1oHj8NHgd1HzUO43w
iKZj40Nez30H8q+YjmVwSS0vJHvddNwcjHu4M5XyN0nHGvdK3wdtwvM2HdNf
9Fm1a9F693R4RbZedzImPkLTITti3czQfJpnWekIFFUy+aYnnIfpUL3Udq7q
E61/l47G6Suvh+dTvf+lQ35NaD9/FK2XzcCoWcHW0idJ1s7Ad6mvYra2swWy
cQZOtx+ElOFMgWyTgQj/9ho7CfLvmgHXqqD5cS+E538GxCbz/57wJvypGRh5
L+LPrq/EZ1UGnh3rV3ExJvydGfiWNaN0wVJaP5AB9TVLdylqE79SmZC85F2/
24jwqWfCp9BlZeMhsl+XiQ/vpL32uVB+lpnY2qrapfWF4jlnQmKMopO0Kvn3
zUS6q23UfinaHwmZGEr3+bxdmvJhZqK559hev+Pkvy0TJpGi/EPtpO/LRNNa
V1aBB9VXPAv82xbeegGU/+ws6C78OnnlHtq/q7P+97zalYVBpVWhnhmE1zEL
S4+u7w67SP68s/D6/iudvynkLzoLcborWFltFL8gCyHb59bYy9F6ThZepKVt
Tf1B+fZmoVm5+2bGCoo3Ohv8F57GN1IpH6VsiCb5BjCOER9Ls7Fx8mj96r3U
j6bZaG9z+6+1l/RHs7HTzlrVWY7y8ciG+heVRdt96PwJy0bZN/vC5NM0b7Oz
YbKz2VjmEuFtyEbjjd+Hez4R313D8knJcVN8CO9QNs73rO6LGaJ6y+XAyXPp
3semhHdhDgwy7tv9Pk32G3Nw9cby1um55N82B8E+n0JmzKb1bjloX29wZvcW
wh+Yg31LWE/ufyG+HuVA1/ftkQh7kqtz8Gog1ffWdLJ/mYM5E6cFH5Qh/n7l
4EIjgzu6ifTSuZBIfB/sHC78fsxFody3oRw2yVa5YF+IsjNcR3jP5mLWc9eW
/8bMEsh+uRi11SDrj7vw/MtFJS7eU4gluT0XW1Z779CRonjfclHmnBxx56Lw
PMyDQnhLweMjJM/Jwxzfzh1fi2n9mjyszCz4vG4nzWvzPEydOW9L9k7Sn8zD
6KPyGdNHU/188lAoe2Rh9lniMyYPWcstDsRsI36e5KG3TTPEtprsuXlI5jiI
MHeR/DEPKh2DRoHpxJfYY6xd6nLl4F/Cp/wYHL+cA498aX4se4zDuum77vLn
CORtj3G075ZJ/HXi79hjaP/ZklAdQvaejxF9eZKK/0/Ck/MYtYtMjKfYUH6N
j7FyyNrxjTjJ7x/jz9EPzik5JIvkQ0K/KHXKa8pPPh9qMOtSbCH/Ovn4z65z
g/QKZYG8KR+esz/98g6neAfzYXQzd+yMCNqvF/Pxw39Ovr8c+Q/Kh1n4jHAv
OerftHxYX91sY1ZE+dTkw8nGsk3PheTf+TitEFuj3EjxJxegRXqTRZkI8bm+
AB6TNniqt5E/6wIYyFjtM48jvs4V4M25uZJlsygf/wJoaeZPfl9BclkBQpbu
3SFjSPifFUByppzThpuk7y/Avo7I9bYWlM/EJ4gwX/DDO57299wnuDBF5jWv
lPpR7wke7ThhenML4dv9BMGqjVqr1ci/0xPIas6QknClfrr+BBKfN+5I/EDx
Yp8g4H7b6C2/ia/CJ3gikRlgV0gy7wn0Jt7e9uMtrf/0BOnPxFZcEaV5NKYQ
EysQnWst/P4oRLd1v16EA8nLCzFnwxjOkQyy316I3Psw27qK8NoXgvXnx7rV
niRfKUTCoNG6QeH5HVGIt1WNm+PnU31yCzG0PtitwpT0TYXIWpi8UkZ43nYX
YquUud0Oe+JrRBGSW+eNzc4lPNOK4JK595yucD8uKkLJAu+yGcL6bi5CzLjp
Hft2kv2hInDF05cUpRKfl4qQO2Jty+23JAcX4dfhcoX6a8LvoSJs6VLbGiBN
/VNbhKkZi7S3u5H+dRHyH/6pmfuI6jdYhAmDOvPvhVJ8mWIoFhxKE2+hei0o
xsCJ7zf0xtJ5b1gMf1Z/pV4v+dtXjGJP+zeqL4TfV8WIDjAcao0hfLeLkdnS
VddjRPknF4M5z3VE1mja7+XFqA8fGMxMIn8dxbBd27h4kz6t/16MKvFf32c+
pvUSJVBv1ZlsNYP0qiWQ3Wv+yt6W7PeUQMuvnmswi/CcKoE7P/i5lyGtf1CC
JXLLjcyjiN+iEsRNVt+a0kb58kvQZPu0x6SN4n0uwW8HsaHpaqQXZWLPrZyo
fF8BXwxJJjSvHTGva6f1ikzYnOqrTosSzAuGGhOdFVHeHpcpni4Tpj8aH3JN
Bf4Ya5moej5m1jNj0pswYTEuvKSeI8DLsGBiQYnuG+1i0tsxcU1t8O2C42R/
hokNOz88b08ifO5MNFZphcjQ/mLcYsLZIDZAey/lH8qEWq3y4L5Vgvow4pk4
rxF620uYTwkTmb9UfsTMoP3PYmL0ntvqi/Rofetw/O88hT8B1C/vmHBMfqsR
PluAj/GVie+tY5q1tlK8f8N8HDLbvmaQ8hlfCv9zV7fsD6b+kC1FyoDeq2Wb
BechY1YpkNwxZdEq4ftgKeKPe/VfmUL4VpXCSX/PUIkk6Y1L4T4Y7vfFmvje
WYq37mo73HgU36YU9xd81vTzJP8nSnEvaI/xs22kdy2Fx71Yp3/vKd+7pVi8
eL++uPA+llqK+n+W9ubWgnnDyC9Fh869Fxb9hIddik9c4+P3DpO/zlJIHd/v
yuwR2DN6SuEnkhkSJtyPA6V4/mLg8J4LZC9aBl/PVH70CqqfVBl+28xMeb5T
0L8MxTI420hmSVeSvXoZzKacLFs0RPXVLUP0th21y/eS/boypB2bPXLAj/yb
lKGxJvCkXSDVy7IMT+0OX3pqRPWyK8PpjyL/srVJ71wGnv9mG23h+4dvGaRn
3hqMNKX6h5bhIpS/R66m/ZVQBnNfy9gRV0mfVYalsufFpIT3d2YZrkzQXZfs
SXpWGfLGTn8YyyW+2sqwq8srbfQ66o93ZQjUGBKdKE793leG2D9dqRezBPVh
/CuDqOxKmdvxVC/xcmxe76XgtJ7qI1sOH3bsNYNZxNfscpgn9TnVpVO+2uVw
3TTznYNwPq0ux776AfbBaqqXcTmcXT7Uy1iSflc5gm0dHrY5CPY3w6YcnZer
uFlN5N+xHGOuerCt+ITftRyrdLiqCibEp3c5Gua/tvPTonrcLcen1eN8s4NI
H12OU7/zosdlkz61HGzTMQ6/KojfgnIcdBNtW7KT6l1VjrHVX19YTKf4nHIc
ReY4zxfU/53luJ3mpxZ6meZRbzl614dtDEhWFegHyjHa/azLgxCKP7oC3j1i
7loSNE+kKjBDvnErfxzVR6kCq+bbsFp1aP+oV8Dd7dXvacL3/KUVqJpcabCp
h+q7rgJhLk6e2y+TvWkFjo11OLVkKdXPsgJpyY/Ne45QfkcrYOrgorHtPPHr
XIGgw28qCtrJv0cF5sp/nWr4kOx9K/7394SwClSraP1OnEXxEyrAeG2kWLWK
+iO7AgYFdrki8oSfWYGIRNl7F2s1BPqGCliO3H8+dyLp2ypwVXtUpP5t4rer
Aqw+9ymfKqk+fRW4ZbXo1JxYwj80LOfJxKzdQf0lXok+3R/qnx7Q96JcJaYc
YanoPqD+mF0JR8kl9+saaL8urMQhTu/uWDpfGKsrcaZV8XyrCH0vb6yEb5X0
hN+DlP+uSqz6kag23ofi21bCI25rXmkJ4XesxJofeVw/4fuF27A9w3xh20bq
H+9KBI9dK3FV+D4ZWAmVTZMLHdQJf3QljF571QxupP33qBKaXbt/bhb2X0El
rD/XnInRJzycSkR9uq+/MZHmxctKeE4NzRmnQPXorcT5mH6ZT3PI36/h+FM4
Z79S/ozRVbikZODL2k73IekqzNVpyLx+hfRKVbhh8fP82SziS6MKf+p89i+h
85qxtAop2U1HwsaRvUEVtr867KflSPhMq3BMt4v3H5PsrarwueGbgm8fzdej
VXjw2MFBMoT69eywP9/FzKZf5N+jCq1KRrGSJ4hPvyrM1H+/v2Et8RVWhdXy
Ey8HypD/xCr8G196pDyR/GdXIc2K0//Cj+pVOuxvw4xqDxXqh4YqiL1/uN80
ifZjexW+u+mYbbpO+LuqYKN7n3NYmfx/q0JiyYJQUQ+q91AVVHot248dIfsJ
1Rh6VXyq4yPhl6tG6pl55nvCqB/nVEOUddDYsJfqs7AaHzsKf0hZEX9rqtF7
10zjTRbVe2M17J6PNW1RInvzatz2uD890Jjw21aj+L9rxik3iJ+T1Xj49ceC
KbIU360aVruO7TcrJHw+1fA15nav2UnzKrAabbs4qS1/KL+Yaqyrcij9eZPs
H1XjyhnWrf96yP5JNZxPbyg29CR+q6vx6WPYd3sT2u/cahwNL/suHU/nwctq
vPra75H/lPB9rIbHrK73vsLvr1/VEJt5Z16EDvkXq4ElN2j2odWkl65B2HnP
8khD8q9cA3telU/dcuJfowZds+pYTnJzBbJBDb5t0Mo1Aa3fVoNgxoG4gJXU
L1Y1+C3epnOH7kuMszXYJh/T2F1A+Dxr0Hm9f6XPKorvVwOn9W8u71hH+vAa
PHKXTJjTSPETa2C14Y/uPAma9zk1qP840LMwiPgprRlG4rV6KJL6r7EGHqJ2
c/3vUfz2GkT+2rLhhznhfV8Di2xbUUYS2X+rQfK7pJbvwvNIpBbGgw639osQ
vgm1UPdfMLRT+F4kX4v97JdJuwZIP6cWK2vM8tU61AV6nVpcqqwqnbWF8K+p
xTnVsYV674T361r4tb7Ltz1JfJ2sxddPr57nBNL8uDi8Xo5veC2T9D61iKqz
WTi1kc6DoFp8SJM/ObSJ+iumFiPyH3fVssg+rRbTDJscg2+R/ZNaKN1Kbrq5
kPq/phZXS2WiX70nPbcWBkvvb92sRP35qhbmhY7/3Oi9mPGxFjs2NLZrRhM/
v2tRtI03j91C+0OsDqtltkjzHlF/Ta6D4hjXkQZyxL9yHX6bfvALmkH+59eh
5ECyahS9NzGW1SHr2+5Zvg+E9/866B2Ve9k0n/Tb6sA2sPKSKaf6WdfBvbQg
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
l3gKWVOF87/3KDP/D7zRTv8=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9WnlczV/QvlGJ0EJESraQpWxl9yAkW4UK4WeJCGUpW3KLlFQKWVpoVUpp
L6237bbeujuJypJIQrZE9fa+zfe9/9zPfObMzDNzzpkzZ8533F57c5t+LBbr
Yn8W63//+37bcNzgi2HbLxXO/5GcvRjuYL9CtmJEH91ogx9Tv87YnjSsj2Yd
goOd9sKvmsP7aO0j4M1Rq3ZLG9VHwx4rtU/2K7w1uI/WPw7Fn5X2S7yVSP8J
8NLso2P9yJ7pKagfsnE/WKFK9hzx55tHs+EN0udwGiKvziZkaZH9s7BU/Fgu
40n2/c4h9rmZe+CM0YTHGccyXza+NNLuoxMvoPPH28P/LpM/tmzIpIx/OPLr
2D66wxVK7B1tF2vJP44bFgT2f9C1W62P9ryEiZMUttyqJnumlyEc0jVq+n/E
V3fH52+Brjfq1Qm/O1TMXG2ulxD+mCvYsFt37oR4su/ggch6U4f1A8f00fM9
8dX875RAE5JnXUX05P8aL3FH9tFlV8Fe1ZF6cb8G+euFQgv1lw8alftoq2tA
kaPaxRKS1/ZGhOiW+Nd2kv/gjdfBHusMNCgeZ3yR8j1oB9eP+LiOfmWnVgWO
Inyyfsj/MueJ8UYmXn6wfzQoQDqH7Ff5IdolKPPQfuLr+yPDMdR2twLF85Y/
vlk1d++aS/53+CNhaXaByTmaH+sbKHkaNWzXQYon5wacyvenG30lPBNv4q/T
C5cZO2i8503EpG4ZqLCP6NabsKgsMWtRJ39Nb8EzylltQifFM/UW5O23NyeV
ET71ANj5/XW+46PZRzsHoKOh35Z2Zj6NbsPY3/2uRELjY27Dx5h7QZhK/MF3
IJh3LsHwGzN/d6BQrlPvyqb1Ir6D0HT1uIqbxJ9/F3Hj52+sVCB/gu9iyzJd
s/tFpI91D4kn/MUNloR/fy/tFm+fpEF02T0cj9mqfXoA+TM9EDmDNI4N/MfM
fyAcPT7M88khez8CkSV/dXXLW7JnFYT6jVkVD5/T+JwgtAXY5e44R/NxORjT
5LqXLX1A9IdgnNindvn+N6LXh8AkvUftYi7hSQzB4r9XchW9xvXRw+/DznfV
jR1mE/roM/fhL/rWn8si+y/vw9nFVd3HmfYHHuDflrdV1XakL/IB9qQ5ReV+
o/UiG4rxN1lKeu9pfg1CoX1If7bZURpvGwrbF50xF56Sv4GhkIlzOdH5iexV
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
RZnnHub+xIXjxenXAqneZ2txETvw/eip00l+GhdGJdWSB3fIviEXG0WatROY
/ogRF26ydoqSCPLXlIvf3wfw//+9YCcXKWEyrqufEb5DXJhtn/H56HPKj05c
qG6YcrKqivC5cfFtUrF9J1PvXOfiZexBVfMyWk9BXBiYb4/jzGL6lVxU7m05
tlub5FO5GDHa5KnKcsJXwEX7Ivu18S3E53Gh6f33SiBz/3/BRYj7fo+EM8R/
z4VV54+V2nT+sL5zIZ/Uz/dWDMWnp3f8Cv87HrQ+WYNLMWTKtbxm6ney1Utx
Zs03F2/m/JlUigHydsrns8j/WaUIdEj5uDOAuR+WIm5f3AfJMuKblOJy9Ew1
swriW5biZPLA+pXM/O8rhf5Zm23X3Jj7Yym6NzyInUrxYjuXgtXZvP0d0y+7
WoqCmZkHm6ifzA4oRfknw/fhtP9Z4aU40L5w2I1G8i+hFAOjtMNX7yT92aX4
K/QqKKf6kF3ai79srrMX048Ql+Jo6YvWEi+SbyxFSv8BDqHPaD99LsWro61b
HrcR/j+luD+vae9Spt8hX4aIGSMCf3wj/aplEKyQzq+4RPthbBkC3y6TsYqi
fDqtDDZmXXeErbQejMrwxHKE9qOJtP/MyhCd9/3aeKoP2TvLoK9wqKJjIOl3
KoNf/VFh6WPqT14qQ6Tg1WVjc9J/vQxfOJ0q/SMJX3AZwodMXHeD+s/smDLM
bLdTNKP9xEorQ4Mg+XbsW+IXlOEPxnp4DKD4VJch8dLJ/tHFZP9FGQYHz+rh
biT55jIE3B/y4gbdr9nfy/DYQeGPgQfNH6sc10ym7y5hztPB5bhZs+vG9jOk
f1Q5HF6neR2k+wp7Ujm2yuLSCqa/Mrscq/e6tVquJPtLy9GTte34DcLLWlfe
e1+51FFdT/vXoRy+Xq/HDoog/oVy6D4c+8DTheSvluPbOVOtzCqyf7scEsup
H9kmxA8vx5K6bevKWpj7dznu7a868+kA4csux397zkwN02Lu4+WIVTb5bWRC
8ROX40lP81wtpr/2uhevh0XMDD+S/1yOZ2yxh0N/Wh+d5TjuuN3U7T3Zl68A
29X/wBsuc5+vQHTr+HUXNEl+bAVe+/7Kncn036ZXoGKEnMxrtb58xJ5fgXEv
9CwGMP36VRVYa/jhR082zY9ZBfgKTucLs0j/rgp8Gjbq4it6v2EfrsCB96VV
X7qY/kAFYoXPNP3Tyf6lChxBiaoX0x/2q8Dn5aofDd8SP7gCPdYfzlqPI/uP
KpAmv/Dr4g6KT1oFTo0fG6OcxPQXKuBdXi4b7EPrt7oCY69drc74Q/jqKlCU
3dD5hu6f7OYK7J+TYOJvyrxPVID3LprXL4v0sypxNz1gmMiZ9A+pxJK3N49F
gtbHqEo8OalV+fQayetUoqLZVWvlV8I/uxIjF3hw2ylerGWVsN5tqe7N3AfW
VWKsQHjfTUD4rCqhN0jJextTH++vRMfBkF9fLhP/eCVyfJZnL2UR/3YlJhwZ
n+E0ivgRlXgltPGvDCX8TyoRmj5XfhvTb86pxI7VrmPGMfm5rBKTuW8iP44g
/ySVcPdwbjqaQvzXvfhDNUKMppL+tkpw8tMj5hiR/c5K6OrMHvXrNPEHVKFd
87rHn+l9/Rn2sCpM1L7SMITpD2lXod49JIV3n+SnV8Ff0X3oR1qPrAVVkDnx
aZcs9e/Yq6qgnt6vbHMm0z+pgq3T8lVfmfW7qwrVd9XaZjH9HLsqeCyI8ek/
gPinqxA2z6F8A/M+dbkKc76ZNYSkEd+vClUtv0Y0M+8DIVXw+St41EjfE7Af
VWGXWWlMXBDzXlSF/g7rUmxdCF9hFXR+u/rXUv3DqqnCq82Rp7a8IP11Vehy
4S9eMJF5z65C8xPNX7PziP+jCqe2KjlGSZl+DQ/rdy4uM6d8wx7Cg2x31VaP
C6R/NA8jzZaNVcsmeR0eFviIH4zXI/k5PBjnnJ1jdoz4y3jQT+7a8I/p16zn
wbzYaa7PUdJvxcPBgo8tS5n3PRseBGkDjWfSewz7OA9XvOE3hakvXHjY6Pai
5z/q77G9eNh3JmxhtD/x7/DQvVk5fBS977AjeMjvjm2/yNRXiTwoO9uGZtD9
h53DA8tQ8bgu8x5czsPXOqcLFo9p/0p4uFvA/nqS8gHrDQ/aV0fvXM2cL208
8DK9tv1tofz3l4c3eiotxj6kb3g1LHiL3lcw9ZR2NWZqJZiYJBF/RjXCvcef
fxtC/AXVCMy78jKceR9dXY3BeBdvTfufbV4Nw3T3Ax1Hmf5TNXgPO2d2JhPf
rhoPEvY/dFEk/plqeJ5yu2vCJ/2Xq1G34dlJ6z9k378a8UMs4lqqyJ+Qasyr
n1mxfBzJx1bDd9iDylIPOt/Tq6GUODAichj5W1SNQy6DLHKcSH9Nr3yIx6Al
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
952Y9gxzYhXSPKgeYC19Bt74u98Vev3/H9B6aP0=
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -23.26533985957284},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 23800.}, {-23.26533985957284, -2.3435781378852494`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.72326583694641, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{3.7805125858932047`*^9},
 CellLabel->
  "Out[493]=",ExpressionUUID->"bbf16a5e-f57a-4279-8145-53ef44fa1beb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7805125382920713`*^9, 
  3.780512538331174*^9}},ExpressionUUID->"8fa348b7-3777-47f8-b70b-\
61a9b0538bce"]
},
WindowSize->{651, 711},
WindowMargins->{{Automatic, 69}, {0, Automatic}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 406, 9, 91, "Input",ExpressionUUID->"8ac639c4-1abc-430d-97a3-f6042c9dff31"],
Cell[967, 31, 1510, 34, 199, "Input",ExpressionUUID->"6ae06671-140c-4cd7-b5a2-b7f731c52c5a"],
Cell[2480, 67, 283, 7, 36, "Input",ExpressionUUID->"92a51566-7288-402e-add8-0f7d4137a06f"],
Cell[2766, 76, 9524, 232, 1846, "Input",ExpressionUUID->"6b6a2e17-c6a4-4dee-b943-3811d4e5fef2"],
Cell[12293, 310, 2262, 56, 415, "Input",ExpressionUUID->"8c0312c8-6de9-4c68-abc4-a2c617646d51"],
Cell[14558, 368, 12990, 237, 244, "Input",ExpressionUUID->"73a58e14-b8ca-456f-9f0b-765c3deb2246"],
Cell[CellGroupData[{
Cell[27573, 609, 1720, 46, 280, "Input",ExpressionUUID->"e10bb79e-664d-498d-a2bb-99e821b3ebbd"],
Cell[29296, 657, 12935, 237, 258, "Output",ExpressionUUID->"a5842996-a1a2-4f69-86af-868610bdecf2"]
}, Open  ]],
Cell[42246, 897, 151, 3, 36, InheritFromParent,ExpressionUUID->"b20bb528-23e9-4f26-82a9-63b58e869f4e"],
Cell[CellGroupData[{
Cell[42422, 904, 1626, 45, 253, "Input",ExpressionUUID->"8189d0bc-a7e0-451f-89b6-3854079ec1c9"],
Cell[44051, 951, 12971, 237, 288, "Output",ExpressionUUID->"04ddbea8-e591-4a52-96b6-176d51b432f4"]
}, Open  ]],
Cell[57037, 1191, 323, 8, 36, "Input",ExpressionUUID->"b2017288-9ad1-4b0a-b9da-64c1a06da201"],
Cell[CellGroupData[{
Cell[57385, 1203, 1710, 48, 226, "Input",ExpressionUUID->"dcb32ee4-f8a8-412b-a32a-5614e55f67fa"],
Cell[59098, 1253, 29545, 512, 259, "Output",ExpressionUUID->"bbf16a5e-f57a-4279-8145-53ef44fa1beb"]
}, Open  ]],
Cell[88658, 1768, 154, 3, 36, InheritFromParent,ExpressionUUID->"8fa348b7-3777-47f8-b70b-61a9b0538bce"]
}
]
*)

